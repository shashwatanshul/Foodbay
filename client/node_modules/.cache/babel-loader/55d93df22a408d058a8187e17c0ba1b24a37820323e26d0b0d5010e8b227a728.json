{"ast":null,"code":"import axios from \"axios\";\nexport const registerUser = user => async dispatch => {\n  dispatch({\n    type: \"USER_REGISTER_REQUEST\"\n  });\n  try {\n    const response = await axios.post(\"http://localhost:5000/api/users/register\", user);\n    console.log(response);\n    dispatch({\n      type: \"USER_REGISTER_SUCCESS\"\n    });\n  } catch (error) {\n    dispatch({\n      type: \"USER_REGISTER_FAILED\",\n      payload: error\n    });\n  }\n};\nexport const loginUser = user => async dispatch => {\n  dispatch({\n    type: \"USER_LOGIN_REQUEST\"\n  });\n  try {\n    const response = await axios.post(\"http://localhost:5000/api/users/login\", user);\n    console.log(response);\n    dispatch({\n      type: \"User_LOGIN_SUCCESS\",\n      payload: response.data\n    });\n    localStorage.setItem(\"currentUser\", JSON.stringify(response.data));\n    window.location.href = \"/\";\n  } catch (error) {\n    dispatch({\n      type: \"USER_LOGIN_FAILED\",\n      payload: error\n    });\n  }\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"currentUser\");\n  window.location.href = \"/login\";\n};\nexport const getAllUsers = () => async dispatch => {\n  dispatch({\n    type: \"GET_USERS_REQUEST\"\n  });\n  try {\n    const response = await axios.get(\"http://localhost:5000/api/users/getallusers\");\n    console.log(response);\n    dispatch({\n      type: \"GET_USERS_SUCCESS\",\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"GET_USERS_FAILED\",\n      payload: error\n    });\n  }\n};\nexport const deleteUser = userid => async dispatch => {\n  try {\n    await axios.post(\"http://localhost:5000/api/users/deleteuser\", {\n      userid\n    });\n    alert(\"User deleted successfully\");\n    window.location.reload();\n  } catch (error) {\n    alert(\"Something went wrong\");\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","registerUser","user","dispatch","type","response","post","console","log","error","payload","loginUser","data","localStorage","setItem","JSON","stringify","window","location","href","logoutUser","removeItem","getAllUsers","get","deleteUser","userid","alert","reload"],"sources":["C:/Users/adity/OneDrive/Desktop/Foodbay-main (1)/Foodbay-main/client/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const registerUser = (user) => async (dispatch) => {\n  dispatch({ type: \"USER_REGISTER_REQUEST\" });\n\n  try {\n    const response = await axios.post(\n      \"http://localhost:5000/api/users/register\",\n      user\n    );\n    console.log(response);\n    dispatch({ type: \"USER_REGISTER_SUCCESS\" });\n  } catch (error) {\n    dispatch({ type: \"USER_REGISTER_FAILED\", payload: error });\n  }\n};\n\nexport const loginUser = (user) => async (dispatch) => {\n  dispatch({ type: \"USER_LOGIN_REQUEST\" });\n\n  try {\n    const response = await axios.post(\n      \"http://localhost:5000/api/users/login\",\n      user\n    );\n    console.log(response);\n    dispatch({ type: \"User_LOGIN_SUCCESS\", payload: response.data });\n    localStorage.setItem(\"currentUser\", JSON.stringify(response.data));\n    window.location.href = \"/\";\n  } catch (error) {\n    dispatch({ type: \"USER_LOGIN_FAILED\", payload: error });\n  }\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"currentUser\");\n  window.location.href = \"/login\";\n};\n\nexport const getAllUsers = () => async (dispatch) => {\n  dispatch({ type: \"GET_USERS_REQUEST\" });\n\n  try {\n    const response = await axios.get(\n      \"http://localhost:5000/api/users/getallusers\"\n    );\n    console.log(response);\n    dispatch({ type: \"GET_USERS_SUCCESS\", payload: response.data });\n  } catch (error) {\n    dispatch({ type: \"GET_USERS_FAILED\", payload: error });\n  }\n};\n\nexport const deleteUser = (userid) => async (dispatch) => {\n  try {\n    await axios.post(\"http://localhost:5000/api/users/deleteuser\", { userid });\n    alert(\"User deleted successfully\");\n    window.location.reload();\n  } catch (error) {\n    alert(\"Something went wrong\");\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACxDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAwB,CAAC,CAAC;EAE3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,0CAA0C,EAC1CJ,IACF,CAAC;IACDK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBF,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAwB,CAAC,CAAC;EAC7C,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEM,OAAO,EAAED;IAAM,CAAC,CAAC;EAC5D;AACF,CAAC;AAED,OAAO,MAAME,SAAS,GAAIT,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACrDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAqB,CAAC,CAAC;EAExC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,uCAAuC,EACvCJ,IACF,CAAC;IACDK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBF,QAAQ,CAAC;MAAEC,IAAI,EAAE,oBAAoB;MAAEM,OAAO,EAAEL,QAAQ,CAACO;IAAK,CAAC,CAAC;IAChEC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClEK,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAE,mBAAmB;MAAEM,OAAO,EAAED;IAAM,CAAC,CAAC;EACzD;AACF,CAAC;AAED,OAAO,MAAMW,UAAU,GAAGA,CAAA,KAAOjB,QAAQ,IAAK;EAC5CU,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;EACtCJ,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM,MAAOnB,QAAQ,IAAK;EACnDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAoB,CAAC,CAAC;EAEvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACuB,GAAG,CAC9B,6CACF,CAAC;IACDhB,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrBF,QAAQ,CAAC;MAAEC,IAAI,EAAE,mBAAmB;MAAEM,OAAO,EAAEL,QAAQ,CAACO;IAAK,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAE,kBAAkB;MAAEM,OAAO,EAAED;IAAM,CAAC,CAAC;EACxD;AACF,CAAC;AAED,OAAO,MAAMe,UAAU,GAAIC,MAAM,IAAK,MAAOtB,QAAQ,IAAK;EACxD,IAAI;IACF,MAAMH,KAAK,CAACM,IAAI,CAAC,4CAA4C,EAAE;MAAEmB;IAAO,CAAC,CAAC;IAC1EC,KAAK,CAAC,2BAA2B,CAAC;IAClCT,MAAM,CAACC,QAAQ,CAACS,MAAM,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOlB,KAAK,EAAE;IACdiB,KAAK,CAAC,sBAAsB,CAAC;IAC7BnB,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}